Prepare SD Card:
  Put SD Card into Fedora
  Use Fedora Disks to reformat/repartition the SD Card as FAT
  Unzip NOOBS_v2_4_0.zip and copy to SD Card's root



Setup Pi (monitor attached):  
  Put SD Card into Pi
  Power up
  Install Raspbian

  sudo raspi-config
    Change password
      RPi!123DLT
    Change local: en_US UTF-8
    Set Timezone: US Eastern
    Set Wi-fi Country: US
    Enable SSH & VNC Interfaces
  Reboots at exit

  Log into RPiNet WiFi
  sudo vi /etc/dhcpcd.conf
  sudo reboot
Good to go headless!



Continue Pi setup (headless):
  (May need to clear out 10.42.0.2 from known hosts on Fedora)
    sudo vi /home/michael.fitzurka/.ssh/known_hosts
  On Fedora: ssh-copy-id -i ~/.ssh/id_rsa pi@10.42.0.2
  ssh pi@10.42.0.2

  sudo visudo (to edit sudoers)
  sudo apt-get update, dist-upgrade, autoremove, autoclean
  sudo rpi-update
  sudo reboot

VNC:
  sudo apt-get install tightvncserver
  vncserver :1 (to create password)
    RPi!123D
  vncserver -kill :1
  Create ~/.config/autostart/tightvnc.desktop
  sudo vi ~/.vnc/xstartup
  sudo vi /etc/xdg/autostart/lxpolkit.desktop
  sudo reboot
Good to use TigerVNC Viewer on Fedora



Set up USB swap:
  sudo dphys-swapfile swapoff
  sudo vi /etc/dphys-swapfile (just CONF_SWAPSIZE=512)
  sudo dphys-swapfile setup
    (Use local SD Card swap file for actual demo)

  sudo vi /etc/dphys-swapfile (now CONF_SWAPFILE=/media/pi/pi-swap/swap)
  sudo dphys-swapfile setup
  sudo dphys-swapfile swapon
    (Use thumbdrive swap file for all other times to protect the SD Card)

Java:
  Copy jdk tarball to Pi
  sudo tar -zxvf jdk-8u131-linux-arm32-vfp-hflt.tar.gz -C /opt
  sudo update-alternatives --install /usr/bin/java java /opt/jdk1.8.0_131/bin/java 1
  sudo update-alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_131/bin/javac 1
  sudo update-alternatives --set java /opt/jdk1.8.0_131/bin/java
  sudo update-alternatives --set javac /opt/jdk1.8.0_131/bin/javac
  Delete tarball

Maven:
  Copy maven tarball to Pi
  sudo tar -zxvf apache-maven-3.5.0-bin.tar.gz -C /opt
  Create /etc/profile.d/maven.sh
  Delete tarball

Docker:
  curl -sSL https://get.docker.com/ | sh
  sudo usermod -aG docker pi
  sudo systemctl enable docker

Docker-Compose:
  Copy docker-compose-Linux-armv7l to Pi (from https://github.com/javabean/arm-compose/releases/)
  sudo cp docker-compose-Linux-armv7l /usr/local/bin/docker-compose
  sudo chown root:root /usr/local/bin/docker-compose
  sudo chmod 0755 /usr/local/bin/docker-compose

Cleanup:
  sudo reboot

  (To verify)
  java -version
  git --version
  mvn --version
  docker version
  docker-compse version

Get Code:
  git clone http://github.com/MichaelFitzurka/Iot_Demo_Gateway.git
  (Copy over software)

Build:
  cd ~/IoT_Demo_Gateway/Smart_Gateway
  mvn clean install

  cd ~/IoT_Demo_Gateway/Rules_CEP
  mvn clean install

  cd ~/IoT_Demo_Gateway/Base
  docker build --rm -t psteiner/base .

  cd ~/IoT_Demo_Gateway/Fuse
  docker build --rm -t psteiner/fuse .

  cd ~/IoT_Demo_Gateway
  docker-compose build



Run:
  docker-compose up -d

To see logs:
  docker-compose logs -f

To stop:
  docker-compose down
  docker system prune

